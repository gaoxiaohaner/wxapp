{"version":3,"sources":["../src/index.js"],"names":["parse","build","mixed","options","workSheet","XLSX","Object","keys","Sheets","map","name","sheet","data","utils","sheet_to_json","header","raw","worksheets","defaults","bookType","bookSST","type","workBook","Workbook","forEach","worksheet","sheetName","sheetOptions","sheetData","SheetNames","push","excelData","write","assign","Buffer"],"mappings":";;;;;;;;QAMgBA,K,GAAAA,K;QAQAC,K,GAAAA,K;;AAbhB;;;;AACA;;;;AACA;;AACA;;;;;;AAEO,SAASD,KAAT,CAAeE,KAAf,EAAoC;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AACzC,MAAMC,YAAYC,eAAK,uBAASH,KAAT,IAAkB,UAAlB,GAA+B,MAApC,EAA4CA,KAA5C,EAAmDC,OAAnD,CAAlB;AACA,SAAOG,OAAOC,IAAP,CAAYH,UAAUI,MAAtB,EAA8BC,GAA9B,CAAkC,UAACC,IAAD,EAAU;AACjD,QAAMC,QAAQP,UAAUI,MAAV,CAAiBE,IAAjB,CAAd;AACA,WAAO,EAACA,UAAD,EAAOE,MAAMP,eAAKQ,KAAL,CAAWC,aAAX,CAAyBH,KAAzB,EAAgC,EAACI,QAAQ,CAAT,EAAYC,KAAKb,QAAQa,GAAR,KAAgB,KAAjC,EAAhC,CAAb,EAAP;AACD,GAHM,CAAP;AAID;;AAEM,SAASf,KAAT,CAAegB,UAAf,EAAyC;AAAA,MAAdd,OAAc,uEAAJ,EAAI;;AAC9C,MAAMe,WAAW;AACfC,cAAU,MADK;AAEfC,aAAS,KAFM;AAGfC,UAAM;AAHS,GAAjB;AAKA,MAAMC,WAAW,IAAIC,kBAAJ,EAAjB;AACAN,aAAWO,OAAX,CAAmB,UAACC,SAAD,EAAe;AAChC,QAAMC,YAAYD,UAAUf,IAAV,IAAkB,OAApC;AACA,QAAMiB,eAAeF,UAAUtB,OAAV,IAAqB,EAA1C;AACA,QAAMyB,YAAY,mCAAqBH,UAAUb,IAAV,IAAkB,EAAvC,eAA+CT,OAA/C,EAA2DwB,YAA3D,EAAlB;AACAL,aAASO,UAAT,CAAoBC,IAApB,CAAyBJ,SAAzB;AACAJ,aAASd,MAAT,CAAgBkB,SAAhB,IAA6BE,SAA7B;AACD,GAND;AAOA,MAAMG,YAAY1B,eAAK2B,KAAL,CAAWV,QAAX,EAAqBhB,OAAO2B,MAAP,CAAc,EAAd,EAAkBf,QAAlB,EAA4Bf,OAA5B,CAArB,CAAlB;AACA,SAAO4B,qBAAqBG,MAArB,GAA8BH,SAA9B,GAA0C,0BAAWA,SAAX,EAAsB,QAAtB,CAAjD;AACD;;kBAEc,EAAC/B,YAAD,EAAQC,YAAR,E","file":"index.js","sourcesContent":["\nimport XLSX from 'xlsx';\nimport bufferFrom from 'buffer-from';\nimport {buildSheetFromMatrix, isString} from './helpers';\nimport Workbook from './workbook';\n\nexport function parse(mixed, options = {}) {\n  const workSheet = XLSX[isString(mixed) ? 'readFile' : 'read'](mixed, options);\n  return Object.keys(workSheet.Sheets).map((name) => {\n    const sheet = workSheet.Sheets[name];\n    return {name, data: XLSX.utils.sheet_to_json(sheet, {header: 1, raw: options.raw !== false})};\n  });\n}\n\nexport function build(worksheets, options = {}) {\n  const defaults = {\n    bookType: 'xlsx',\n    bookSST: false,\n    type: 'binary'\n  };\n  const workBook = new Workbook();\n  worksheets.forEach((worksheet) => {\n    const sheetName = worksheet.name || 'Sheet';\n    const sheetOptions = worksheet.options || {};\n    const sheetData = buildSheetFromMatrix(worksheet.data || [], {...options, ...sheetOptions});\n    workBook.SheetNames.push(sheetName);\n    workBook.Sheets[sheetName] = sheetData;\n  });\n  const excelData = XLSX.write(workBook, Object.assign({}, defaults, options));\n  return excelData instanceof Buffer ? excelData : bufferFrom(excelData, 'binary');\n}\n\nexport default {parse, build};\n"]}